{"version":3,"sources":["components/Header.js","components/Footer.js","components/List.js","components/WithListLoading.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","bg","variant","expand","Container","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Footer","List","props","repos","length","map","repo","Card","border","full_name","Body","Title","name","Text","description","Button","html_url","WithListLoading","Component","isLoading","style","textAlign","fontSize","App","ListLoading","withListLoading","useState","loading","appState","setAppState","useEffect","axios","get","then","allRepos","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAyBeA,EAvBA,WACb,OACE,mCACE,cAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,KAAxC,SACE,eAACC,EAAA,EAAD,WACE,cAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,QAAnB,kCACA,cAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,cAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,mBAApB,SACE,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,cAACD,EAAA,EAAIE,KAAL,CAAUP,KAAK,kCAAf,oBACA,cAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,0BAAf,iCAMR,cAACF,EAAA,EAAD,CAAWQ,UAAU,mCAArB,SACE,uDCTOE,EAVA,WACb,OACE,wBAAQF,UAAU,cAAlB,sC,gBC2BWG,EA3BF,SAACC,GAAW,IACfC,EAAUD,EAAVC,MACR,OAAKA,GAA0B,IAAjBA,EAAMC,OAGlB,6BACGD,EAAME,KAAI,SAACC,GACV,OACE,cAAChB,EAAA,EAAD,CAAWQ,UAAU,OAArB,SACE,eAACS,EAAA,EAAD,CAAMC,OAAO,UAAb,UACE,eAACD,EAAA,EAAKtB,OAAN,CAAaa,UAAU,iBAAvB,0BAAsDQ,EAAKG,aAC3D,eAACF,EAAA,EAAKG,KAAN,CAAWZ,UAAU,WAArB,UACE,cAACS,EAAA,EAAKI,MAAN,UAAaL,EAAKM,OAClB,cAACL,EAAA,EAAKM,KAAN,UAAYP,EAAKQ,cACjB,cAACC,EAAA,EAAD,CAAQ3B,QAAQ,UAAUU,UAAU,OAApC,SACE,mBAAGA,UAAU,aAAaN,KAAMc,EAAKU,SAArC,2BANsBV,EAAKV,WANlC,uF,gBCMIqB,EAXS,SAACC,GACvB,OAAO,YAAuD,IAAxBC,EAAuB,EAAvBA,UAAcjB,EAAS,6BAC3D,OAAKiB,EAEH,mBAAGC,MAAO,CAAEC,UAAW,SAAUC,SAAU,QAA3C,gHAFqB,cAACJ,EAAD,eAAehB,MCuC3BqB,EA/BH,WACV,IAAMC,EAAcC,EAAgBxB,GADpB,EAEgByB,mBAAS,CACvCC,SAAS,EACTxB,MAAO,OAJO,mBAETyB,EAFS,KAECC,EAFD,KAgBhB,OATAC,qBAAU,WACRD,EAAY,CAAEF,SAAS,IAEvBI,IAAMC,IADM,mDACMC,MAAK,SAAC9B,GACtB,IAAM+B,EAAW/B,EAAMgC,KACvBN,EAAY,CAAEF,SAAS,EAAOxB,MAAO+B,SAEtC,CAACL,IAGF,qCACE,cAAC,EAAD,IACA,+BACE,cAACvC,EAAA,EAAD,UACE,qBAAKQ,UAAU,iBAAf,SACE,cAAC0B,EAAD,CAAaL,UAAWS,EAASD,QAASxB,MAAOyB,EAASzB,cAIhE,cAAC,EAAD,QCxBSiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBL,MAAK,YAAkD,IAA/CM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.88d39f26.chunk.js","sourcesContent":["import { Navbar, Nav, Container } from 'react-bootstrap'\n\nconst Header = () => {\n  return (\n    <header>\n      <Navbar bg='dark' variant='dark' expand='lg'>\n        <Container>\n          <Navbar.Brand href='#home'>Chris - GitHub Repos</Navbar.Brand>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Nav className='ml-auto'>\n              <Nav.Link href='https://github.com/ChrisAchinga'>GitHub</Nav.Link>\n              <Nav.Link href='http://chrisachinga.me/'>Portfolio</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <Container className='headerText text-center mt-5 mb-4'>\n        <h1>My Repositories</h1>\n      </Container>\n    </header>\n  )\n}\n\nexport default Header\n","const Footer = () => {\n  return (\n    <footer className='text-center'>\n      \n        Made with Chris by Love\n      \n    </footer>\n  )\n}\n\nexport default Footer\n","import { Card, Container, Button } from 'react-bootstrap'\n\nconst List = (props) => {\n  const { repos } = props\n  if (!repos || repos.length === 0)\n    return <p>No Repositories Loaded, Refresh or check your Network</p>\n  return (\n    <ul>\n      {repos.map((repo) => {\n        return (\n          <Container className='mt-3'>\n            <Card border=\"success\" key={repo.id}>\n              <Card.Header className='cardHeaderText'>GitHub Repo: {repo.full_name}</Card.Header>\n              <Card.Body className='cardText'>\n                <Card.Title>{repo.name}</Card.Title>\n                <Card.Text>{repo.description}</Card.Text>\n                <Button variant='success' className=\"mt-3\">\n                  <a className='text-white' href={repo.html_url}>\n                    GitHub\n                  </a>\n                </Button>\n              </Card.Body>\n            </Card>\n          </Container>\n        )\n      })}\n    </ul>\n  )\n}\nexport default List\n","const WithListLoading = (Component) => {\n  return function WihLoadingComponent({ isLoading, ...props }) {\n    if (!isLoading) return <Component {...props} />\n    return (\n      <p style={{ textAlign: 'center', fontSize: '30px' }}>\n        Hold on a sec, fetching Repositories, ðŸ¥ºðŸ¥ºðŸ¥ºðŸ¥ºðŸ¥º\n      </p>\n    )\n  }\n}\n\nexport default WithListLoading\n","import { Container } from 'react-bootstrap'\nimport { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nimport './App.css'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport List from './components/List'\nimport withListLoading from './components/WithListLoading'\n\nconst App = () => {\n  const ListLoading = withListLoading(List)\n  const [appState, setAppState] = useState({\n    loading: false,\n    repos: null,\n  })\n\n  useEffect(() => {\n    setAppState({ loading: true })\n    const apiUrl = `https://api.github.com/users/chrisachinga/repos`\n    axios.get(apiUrl).then((repos) => {\n      const allRepos = repos.data\n      setAppState({ loading: false, repos: allRepos })\n    })\n  }, [setAppState])\n\n  return (\n    <>\n      <Header />\n      <main>\n        <Container>\n          <div className='repo-container'>\n            <ListLoading isLoading={appState.loading} repos={appState.repos} />\n          </div>\n        </Container>\n      </main>\n      <Footer />\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}